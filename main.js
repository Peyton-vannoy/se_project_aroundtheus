!function(){"use strict";class e{constructor(e,t,s,i,r){this._name=e.name,this._link=e.link,this._id=e._id,this._isLiked=e.isLiked,this._handleImageClick=s,this._handleDeleteClick=i,this._handleLikeClick=r,this._cardSelector=t}_setEventListeners(){this._likeIcon.addEventListener("click",(()=>{this._handleLikeClick(this)})),this._deleteBtn.addEventListener("click",(()=>{this._handleDeleteClick(this)})),this._cardImageEl.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}setIsLiked(e){this.isLiked=e,this.renderLikes()}renderLikes(){this.isLiked?this._likeIcon.classList.add("card__react-button_active"):this._likeIcon.classList.remove("card__react-button_active")}handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardImageEl=this._cardElement.querySelector(".card__image"),this._cardTitleEl=this._cardElement.querySelector(".card__title"),this._cardTitleEl.textContent=this._name,this._cardImageEl.src=this._link,this._cardImageEl.alt="Photo of "+this._name,this._likeIcon=this._cardElement.querySelector(".card__react-button"),this._deleteBtn=this._cardElement.querySelector(".card__delete-button"),this.renderLikes(),this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hasInvalidInput(e){return!e.every((e=>e.validity.valid))}_enableButton(){this._submitBtn.classList.remove(this._inactiveButtonClass),this._submitBtn.disabled=!1}disableButton(){this._submitBtn.classList.add(this._inactiveButtonClass),this._submitBtn.disabled=!0}_toggleButtonState(){this._hasInvalidInput(this._inputEls)?this.disableButton():this._enableButton()}resetValidation(){this._inputEls.forEach((e=>{this._hideInputError(e)})),this._enableButton()}setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitBtn=this._form.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault(e)})),this.setEventListeners()}}class s{constructor(e,t){let{items:s,renderer:i}=e;this._items=s,this._renderer=i,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{const t=this._renderer(e);this.addItem(t)}))}addItem(e){this._container.prepend(e)}}class i{constructor(e){this._popupElement=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this),this._closeButton=this._popupElement.querySelector(".modal__close-button")}open(){this._popupElement.classList.add("modal_open"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_open"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._closeButton.addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("click",(e=>{e.target===this._popupElement&&this.close()}))}}class r extends i{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputList=this._popupForm.querySelectorAll(".modal__form-input"),this._submitButton=this._popupForm.querySelector(".modal__save-button")}_getInputValues(){return this._formValues={},this._inputList.forEach((e=>{this._formValues[e.name]=e.value})),this._formValues}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}reset(){this._popupForm&&this._popupForm.reset()}setSubmitButtonText(e){this._submitButton.textContent=e}}const n={formSelector:".modal__form",inputSelector:".modal__form-input",submitButtonSelector:".modal__save-button",inactiveButtonClass:"modal__save-button-disabled",inputErrorClass:"modal__form_input_type_error",errorClass:"modal__form-input-error-visible"},o=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{method:"GET",headers:this._headers}).then(this.checkResponse)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{method:"GET",headers:this._headers}).then(this.checkResponse)}editProfile(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})}).then(this.checkResponse)}addCard(e){let{name:t,link:s}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})}).then(this.checkResponse)}removePlace(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this.checkResponse)}editProfileImage(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.link})}).then(this.checkResponse)}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this.checkResponse)}dislikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this.checkResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"697fd183-9a82-4522-9294-b01c12c32a59","Content-Type":"application/json"}}),a=document.querySelector("#profile-edit-btn"),l=document.querySelector("#profile-title-input"),c=document.forms["profile-form"],h=document.querySelector("#profile-description-input"),d=document.querySelector("#avatar-save-btn"),u=document.forms["update-avatar-form"],_=document.querySelector("#places-add-btn"),m=document.forms["add-place-form"];function p(e){L.open(e)}const v=new t(n,c),f=new t(n,m),b=new t(n,u),E=new r("#profile-edit-modal",(function(e){E.setSubmitButtonText("Saving..."),e.name&&e.about?o.editProfile({name:e.name,about:e.about}).then((e=>{let{name:t,about:s}=e;B.setUserInfo({name:t,about:s}),E.close()})).catch((e=>{console.error("Error updating user info:",e)})).finally((()=>{E.setSubmitButtonText("Save")})):console.error("Please fill in all the fields")})),S=new r("#places-add-modal",(function(e){S.setSubmitButtonText("Saving..."),o.addCard({name:e.name,link:e.link}).then((e=>{let{name:t,link:s,_id:i}=e;I.addItem(g({name:t,link:s,_id:i})),S.close(),S.reset()})).catch((e=>{console.error("Error adding new place:",e)})).finally((()=>{S.setSubmitButtonText("Save")}))})),k=new r("#avatar-update-modal",(function(e){k.setSubmitButtonText("Saving..."),o.editProfileImage(e).then((e=>{B.setUserAvatar(e),k.reset(),k.close(),console.log("Success:",e)})).catch((e=>{console.error("Error updating profile avatar:",e)})).finally((()=>{k.setSubmitButtonText("Save")}))})),L=new class extends i{constructor(e){super(e),this._previewImage=this._popupElement.querySelector(".modal__image-preview"),this._previewTitle=this._popupElement.querySelector(".modal__image-caption")}open(e){this._previewImage.src=e.link,this._previewImage.alt=e.name,this._previewTitle.textContent=e.name,super.open()}}("#places-preview-modal"),C=new class extends i{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._submitButton=this._popupForm.querySelector(".modal__save-button"),this._handleFormSubmit=t}setSubmitHandler(e){this._handleFormSubmit=e}setSubmitButtonText(e){this._submitButton.textContent=e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit()}))}}("#places-delete-modal",y);function y(e){C.open(),C.setSubmitHandler((()=>{C.setSubmitButtonText("Deleting..."),o.removePlace(e._id).then((()=>{e.handleDeleteCard(),C.close()})).catch((e=>{console.error("Error deleting place:",e)})).finally((()=>{C.setSubmitButtonText("Delete")}))}))}function g(t){return new e(t,"#card-template",p,y,q).getView()}let I;E.setEventListeners(),L.setEventListeners(),k.setEventListeners(),S.setEventListeners(),C.setEventListeners(),b.enableValidation(),v.enableValidation(),f.enableValidation(),o.getInitialCards().then((e=>{I=new s({items:e,renderer:e=>g(e)},".cards__list"),I.renderItems()})).catch((e=>console.error(e)));const B=new class{constructor(e){let{profileName:t,profileJob:s,profileAvatar:i}=e;this._profileName=document.querySelector(t),this._profileJob=document.querySelector(s),this._profileAvatar=document.querySelector(i)}getUserInfo(){return{name:this._profileName.textContent,about:this._profileJob.textContent}}setUserInfo(e){let{name:t,about:s}=e;this._profileName.textContent=t,this._profileJob.textContent=s}setUserAvatar(e){let{avatar:t}=e;this._profileAvatar.src=t}}({profileName:".profile__title",profileJob:".profile__description",profileAvatar:".profile__image"});function q(e){e.isLiked&&o.dislikeCard(e._id).then((()=>{e.setIsLiked(!1)})).catch((e=>console.error("Error removing like reaction:",e))),e.isLiked||o.likeCard(e._id).then((()=>{e.setIsLiked(!0)})).catch((e=>console.error("Error adding like reaction:",e)))}o.getUserInfo().then((e=>{B.setUserInfo({name:e.name,about:e.about}),B.setUserAvatar({avatar:e.avatar})})).catch((e=>console.error(e))),a.addEventListener("click",(()=>{const e=B.getUserInfo();l.value=e.name||"",h.value=e.about||"",v.resetValidation(),E.open()})),_.addEventListener("click",(()=>{S.open()})),d.addEventListener("click",(()=>{k.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,